#!/bin/bash

# a script for dumping to text files all slow channels in a given time range

set -o errexit
set -o nounset
set -o noclobber

# exit if no arguments
if [ "$#" == "0" ]; then
    cat <<USAGE
Save all slow channel timeseries to text files using geco_dump_channel.
Usage: $0 start_time end_time where

    start_time         is in the form Sep 01 00:00:00 GMT 2015
    end_time           is in the same form as start_time

USAGE
    exit 1
fi

# from channels.py file
# channels=`cat dev/data/channels.py | sed -n '2,13p' | sed -ne 's/.*'"'"'\(.*\)'"'"'$/\1/p'`
channels="
    H1:SYS-TIMING_C_MA_A_PORT_2_SLAVE_CFC_TIMEDIFF_1
    H1:SYS-TIMING_X_FO_A_PORT_9_SLAVE_CFC_TIMEDIFF_1
    H1:SYS-TIMING_Y_FO_A_PORT_9_SLAVE_CFC_TIMEDIFF_1
    H1:SYS-TIMING_C_MA_A_PORT_2_SLAVE_CFC_TIMEDIFF_2
    H1:SYS-TIMING_X_FO_A_PORT_9_SLAVE_CFC_TIMEDIFF_3
    H1:SYS-TIMING_Y_FO_A_PORT_9_SLAVE_CFC_TIMEDIFF_3
    L1:SYS-TIMING_C_MA_A_PORT_2_SLAVE_CFC_TIMEDIFF_1
    L1:SYS-TIMING_X_FO_A_PORT_9_SLAVE_CFC_TIMEDIFF_1
    L1:SYS-TIMING_Y_FO_A_PORT_9_SLAVE_CFC_TIMEDIFF_1
    L1:SYS-TIMING_C_MA_A_PORT_2_SLAVE_CFC_TIMEDIFF_2
    L1:SYS-TIMING_X_FO_A_PORT_9_SLAVE_CFC_TIMEDIFF_3
    L1:SYS-TIMING_Y_FO_A_PORT_9_SLAVE_CFC_TIMEDIFF_3"

start_time="$1"
end_time="$2"

# this will fork off a new process for each channel
for ch in $channels; do
    geco_dump_channel ${start_time} ${end_time} ${ch} >> "${ch}".log &
done
